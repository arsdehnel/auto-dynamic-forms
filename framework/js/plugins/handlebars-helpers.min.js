/*global
Handlebars,
_
*/
Handlebars.registerHelper('checkboxesSelectAll', function(dataAttributes, dataAttrValue, locationCode) {
    
    var selectAllOption = _.findWhere(dataAttributes,{name:'select-all-option'});

    // check that we found a data attribute and it's set to true
    if( selectAllOption && selectAllOption.value ){
        return new Handlebars.SafeString('<button class="adf-checkbox-select-all-toggle">Select All</button>');
    }

});
/*global
Handlebars,
_
*/
Handlebars.registerHelper('dataAttributeBoolean', function(dataAttributes, attributeName, attributeValue, returnString) {
    if( attributeValue ){
        return _.size(_.where(dataAttributes,{name:attributeName,value:attributeValue})) > 0 ? returnString : '';
    }else{
        return _.size(_.where(dataAttributes,{name:attributeName})) > 0 ? returnString : '';
    }
});
/*global
ADF,
Handlebars
*/
Handlebars.registerHelper('dataAttributeWrite', function(dataAttrName, dataAttrValue, locationCode) {

    // the default
    var configLocation = 'formRow';

    if( ADF.config.get('dataAttributes')[dataAttrName] && ADF.config.get('dataAttributes')[dataAttrName].location ){
        configLocation = ADF.config.get('dataAttributes')[dataAttrName].location;
    }

    if( configLocation === locationCode ){
        return new Handlebars.SafeString(' data-'+dataAttrName+'="'+dataAttrValue+'"');
    }else{
        return '';
    }
});
/*global
ADF,
Handlebars,
_,
$
*/
Handlebars.registerHelper('fancySelectDisplayText', function(currentValue, data) {
    var dataObj = _.findWhere(data,{value:( currentValue ? currentValue.toString() : '')});
    if( dataObj ){
        return $.trim($(ADF.templates.inputHelperSelectFancyRecord(dataObj)).text());
    }else{
        return null;
    }
});
/*global
Handlebars
*/
Handlebars.registerHelper('json', function(context) {
    return JSON.stringify(context);
});
/*global
Handlebars
*/
Handlebars.registerHelper('numberInputMinMaxBuilder', function(stringLength, fillString) {
    var retString = '';
    for( var i = 0; i < stringLength; i++ ){
        retString += fillString;
    }
    return retString;
});
/*global
Handlebars,
_
*/
Handlebars.registerHelper('optionChecked', function(checkedAttr, value, currentValue) {
    var checkedProperty;
    if( checkedAttr === true || checkedAttr === 'Y' ){
        checkedProperty = 'checked="checked"';
    }else{
        if( Array.isArray( currentValue ) ){
            checkedProperty = currentValue.indexOf( value ) >= 0 ? 'checked="checked"' : '';
        }else if( _.isUndefined( currentValue ) || _.isNull( currentValue ) ){
            checkedProperty = '';
        }else{
            checkedProperty = value == currentValue ? 'checked="checked"' : '';
        }
    }
  return new Handlebars.SafeString(checkedProperty);
});
/*global
Handlebars
*/
Handlebars.registerHelper('optionSelected', function(selectedAttr, value, currentValue) {
    var selectedProperty;
    if( selectedAttr === 'Y' ){
        selectedProperty = 'selected="selected"';
    }else{
        if( Array.isArray( currentValue ) ){
            selectedProperty = currentValue.indexOf( value ) ? 'selected="selected"' : '';
        }else{
            selectedProperty = value == currentValue ? 'selected="selected"' : '';
        }        
    }
  return new Handlebars.SafeString(selectedProperty);
});
/*global
Handlebars,
_
*/
Handlebars.registerHelper('overlaySummary', function(inputData, dataAttributes) {
    if( _.indexOf(inputData,'|') >= 0 ){
        if( dataAttributes.formatStyle ){
            switch( dataAttributes.formatStyle ){
                case 'tilde-delimited-columns':
                    return _.each(inputData.split('|'),function(record){
                        return '<tr><td>' + record.split('~').join('</td><td>') + '</td></tr>';
                    });
                default:
                    return inputData.split('|').join(', ');
            }
        }else{
            return inputData.split('|').length + ' records<div class="overlay-details-hover">' + inputData.split('|').join('<br>') + '</div>';
        }
    }else if( inputData ){
        return inputData;
    }else{
        return 'No data found';
    }
});