this.ADF = this.ADF || {}, this.ADF.templates = this.ADF.templates || {}, this.ADF.templates.custom = this.ADF.templates.custom || {}, 
this.ADF.templates.custom.zip = this.ADF.templates.custom.zip || {}, this.ADF.templates.dropdowns = this.ADF.templates.dropdowns || {}, 
this.ADF.templates.forms = this.ADF.templates.forms || {}, this.ADF.templates.grids = this.ADF.templates.grids || {}, 
this.ADF.templates.inputHelpers = this.ADF.templates.inputHelpers || {}, this.ADF.templates.inputTypes = this.ADF.templates.inputTypes || {}, 
this.ADF.templates.messages = this.ADF.templates.messages || {}, this.ADF.templates.modules = this.ADF.templates.modules || {}, 
this.ADF.templates.utils = this.ADF.templates.utils || {}, this.ADF.templates.action = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "        data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<a\n    href="' + alias4((helper = null != (helper = helpers.url || (null != depth0 ? depth0.url : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "url",
            hash: {},
            data: data
        }) : helper)) + '"\n    class="btn btn-' + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + " " + alias4((helper = null != (helper = helpers.actionClass || (null != depth0 ? depth0.actionClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "actionClass",
            hash: {},
            data: data
        }) : helper)) + '"\n    data-action-type="' + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + '"\n    title="' + alias4((helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '>\n<svg viewBox="0 0 32 32" class="icon">\n    <use xlink:href="#icon-' + alias4((helper = null != (helper = helpers.iconType || (null != depth0 ? depth0.iconType : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "iconType",
            hash: {},
            data: data
        }) : helper)) + '"></use>\n</svg>\n<span>\n    ' + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n</span>\n</a>";
    },
    useData: !0
}), this.ADF.templates.custom.zip.formRow = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "has-prefix";
    },
    "3": function(container, depth0, helpers, partials, data) {
        return "has-suffix";
    },
    "5": function(container, depth0, helpers, partials, data) {
        return "regionName--";
    },
    "7": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '            <a class="tooltip-trigger toolTipIcon" href="#"><p class="tooltip-content">' + (null != (helper = null != (helper = helpers.tooltipText || (null != depth0 ? depth0.tooltipText : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "tooltipText",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</p></a>\n";
    },
    "9": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '        <div class="form-row-prefix">' + (null != (helper = null != (helper = helpers.prefix || (null != depth0 ? depth0.prefix : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "prefix",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</div>\n";
    },
    "11": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '        <div class="form-row-suffix">' + (null != (helper = null != (helper = helpers.suffix || (null != depth0 ? depth0.suffix : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "suffix",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</div>\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div\n    class="form-row row ' + alias4((helper = null != (helper = helpers.wrapClass || (null != depth0 ? depth0.wrapClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "wrapClass",
            hash: {},
            data: data
        }) : helper)) + " " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.prefix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + " " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.suffix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(3, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '"\n    id="' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.regionName : depth0, {
            name: "if",
            hash: {},
            fn: container.program(5, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '-field-wrap"\n    data-field-master-id="' + alias4((helper = null != (helper = helpers.fldMstrId || (null != depth0 ? depth0.fldMstrId : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fldMstrId",
            hash: {},
            data: data
        }) : helper)) + '"\n    >\n\n    <label for="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" class="layout-grid-3">\n        ' + alias4((helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper)) + "\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.tooltipText : depth0, {
            name: "if",
            hash: {},
            fn: container.program(7, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    </label>\n\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.prefix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(9, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '\n    <div class="form-input layout-grid-6 layout-grid">\n        ' + (null != (helper = null != (helper = helpers.inputField || (null != depth0 ? depth0.inputField : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "inputField",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n    </div>\n\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.suffix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(11, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "\n</div>";
    },
    useData: !0
}), this.ADF.templates.dropdowns.link = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper;
        return container.escapeExpression((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + "Action--";
    },
    "3": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "        data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<a\n    href="' + alias4((helper = null != (helper = helpers.url || (null != depth0 ? depth0.url : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "url",
            hash: {},
            data: data
        }) : helper)) + '"\n    class="' + alias4((helper = null != (helper = helpers.itemClass || (null != depth0 ? depth0.itemClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "itemClass",
            hash: {},
            data: data
        }) : helper)) + '"\n    id="' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.regionName : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + alias4((helper = null != (helper = helpers.id || (null != depth0 ? depth0.id : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "id",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(3, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + ">" + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</a>";
    },
    useData: !0
}), this.ADF.templates.dropdowns.menu = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper;
        return '            <button type="button" class="dropdown-toggle dropdown-label">' + container.escapeExpression((helper = null != (helper = helpers.buttonLabel || (null != depth0 ? depth0.buttonLabel : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "buttonLabel",
            hash: {},
            data: data
        }) : helper)) + "</button>\n";
    },
    "3": function(container, depth0, helpers, partials, data) {
        var helper;
        return '                <svg viewBox="0 0 32 32" class="icon">\n                    <use xlink:href="#icon-' + container.escapeExpression((helper = null != (helper = helpers.caretSvg || (null != depth0 ? depth0.caretSvg : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "caretSvg",
            hash: {},
            data: data
        }) : helper)) + '"></use>\n                </svg>\n';
    },
    "5": function(container, depth0, helpers, partials, data) {
        var stack1;
        return "\n" + (null != (stack1 = helpers.each.call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.footerOptions : depth0, {
            name: "each",
            hash: {},
            fn: container.program(6, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "            ";
    },
    "6": function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '                    <li>\n                        <a\n                            href="' + alias4((helper = null != (helper = helpers.href || (null != depth0 ? depth0.href : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "href",
            hash: {},
            data: data
        }) : helper)) + '"\n                            class="' + alias4((helper = null != (helper = helpers.itemClass || (null != depth0 ? depth0.itemClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "itemClass",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(7, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "                            >\n                            " + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n                        </a>\n                    </li>\n";
    },
    "7": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "                                data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    "9": function(container, depth0, helpers, partials, data) {
        return '                <input type="search" class="dropdown-text-filter">\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {};
        return '<div class="' + container.escapeExpression((helper = null != (helper = helpers.wrapClass || (null != depth0 ? depth0.wrapClass : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(alias1, {
            name: "wrapClass",
            hash: {},
            data: data
        }) : helper)) + ' dropdown-wrapper">\n    <div class="dropdown-inner">\n' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.buttonLabel : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '        <button type="button" class="dropdown-toggle-caret dropdown-toggle">\n' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.caretSvg : depth0, {
            name: "if",
            hash: {},
            fn: container.program(3, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '        </button>\n        <div class="dropdown-menu hide">\n            <div class="dropdown-menu-mouse-padding"></div>\n            <ul class="dropdown-item-group primary-options"></ul>\n            <ul class="dropdown-item-group footer-options">' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.footerOptions : depth0, {
            name: "if",
            hash: {},
            fn: container.program(5, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "</ul>\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.textFilterInput : depth0, {
            name: "if",
            hash: {},
            fn: container.program(9, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "        </div>\n  	</div>\n</div>";
    },
    useData: !0
}), this.ADF.templates.dropdowns.selectItem = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<li>\n    <input type="checkbox" id="' + alias4((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + alias4((helper = null != (helper = helpers.idPrefix || (null != depth0 ? depth0.idPrefix : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "idPrefix",
            hash: {},
            data: data
        }) : helper)) + "--" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="' + alias4((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + "--" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" ' + alias4((helpers.optionChecked || depth0 && depth0.optionChecked || alias2).call(alias1, null != depth0 ? depth0.checkedInd : depth0, null != depth0 ? depth0.fieldValue : depth0, null != depth0 ? depth0.currentValue : depth0, {
            name: "optionChecked",
            hash: {},
            data: data
        })) + '>\n    <label for="' + alias4((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + alias4((helper = null != (helper = helpers.idPrefix || (null != depth0 ? depth0.idPrefix : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "idPrefix",
            hash: {},
            data: data
        }) : helper)) + "--" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '">\n        <svg viewBox="0 0 32 32" class="icon checked">\n            <use xlink:href="#icon-checkbox-checked"></use>\n        </svg>\n        <svg viewBox="0 0 32 32" class="icon unchecked">\n            <use xlink:href="#icon-checkbox-unchecked"></use>\n        </svg>    \n        ' + alias4((helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper)) + "\n    </label>\n</li>";
    },
    useData: !0
}), this.ADF.templates.forms.form = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        return '<div class="adf-form-fields"></div>\n<div class="adf-form-actions"></div>';
    },
    useData: !0
}), this.ADF.templates.forms.row = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "has-prefix";
    },
    "3": function(container, depth0, helpers, partials, data) {
        return "has-suffix";
    },
    "5": function(container, depth0, helpers, partials, data) {
        var helper;
        return container.escapeExpression((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + "--";
    },
    "7": function(container, depth0, helpers, partials, data) {
        return "        " + container.escapeExpression((helpers.dataAttributeWrite || depth0 && depth0.dataAttributeWrite || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.name : depth0, null != depth0 ? depth0.value : depth0, "wrapper", {
            name: "dataAttributeWrite",
            hash: {},
            data: data
        })) + "\n";
    },
    "9": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '            <a class="tooltip-trigger toolTipIcon" href="#"><p class="tooltip-content">' + (null != (helper = null != (helper = helpers.tooltipText || (null != depth0 ? depth0.tooltipText : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "tooltipText",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</p></a>\n";
    },
    "11": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '        <div class="form-row-prefix">' + (null != (helper = null != (helper = helpers.prefix || (null != depth0 ? depth0.prefix : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "prefix",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</div>\n";
    },
    "13": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '        <div class="form-row-suffix">' + (null != (helper = null != (helper = helpers.suffix || (null != depth0 ? depth0.suffix : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "suffix",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</div>\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div\n    class="form-row row ' + alias4((helper = null != (helper = helpers.wrapClass || (null != depth0 ? depth0.wrapClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "wrapClass",
            hash: {},
            data: data
        }) : helper)) + " " + alias4((helper = null != (helper = helpers.recordClass || (null != depth0 ? depth0.recordClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "recordClass",
            hash: {},
            data: data
        }) : helper)) + " " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.prefix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + " " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.suffix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(3, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '"\n    id="' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.regionName : depth0, {
            name: "if",
            hash: {},
            fn: container.program(5, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '-field-wrap"\n    data-field-name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '"    \n    data-field-master-id="' + alias4((helper = null != (helper = helpers.fldMstrId || (null != depth0 ? depth0.fldMstrId : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fldMstrId",
            hash: {},
            data: data
        }) : helper)) + '"\n    data-page-dtl-id="' + alias4((helper = null != (helper = helpers.detailId || (null != depth0 ? depth0.detailId : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "detailId",
            hash: {},
            data: data
        }) : helper)) + '"\n    data-field-type="' + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + '"\n    data-field-priority="' + alias4((helper = null != (helper = helpers.fieldPriority || (null != depth0 ? depth0.fieldPriority : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldPriority",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(7, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '    >\n\n    <label for="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" class="layout-grid-3">\n        ' + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.tooltipText : depth0, {
            name: "if",
            hash: {},
            fn: container.program(9, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    </label>\n\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.prefix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(11, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '\n    <div class="form-input layout-grid-6 layout-grid">\n        ' + (null != (helper = null != (helper = helpers.inputField || (null != depth0 ? depth0.inputField : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "inputField",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n    </div>\n\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.suffix : depth0, {
            name: "if",
            hash: {},
            fn: container.program(13, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "\n</div>";
    },
    useData: !0
}), this.ADF.templates.grids.cell = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "        " + container.escapeExpression((helpers.dataAttributeWrite || depth0 && depth0.dataAttributeWrite || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.name : depth0, null != depth0 ? depth0.value : depth0, "wrapper", {
            name: "dataAttributeWrite",
            hash: {},
            data: data
        })) + "\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<td \n    data-column-select-priority="' + alias4((helper = null != (helper = helpers.fieldPriority || (null != depth0 ? depth0.fieldPriority : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldPriority",
            hash: {},
            data: data
        }) : helper)) + '" \n    data-column-select-display-override="' + alias4((helper = null != (helper = helpers.colSelectDispOverride || (null != depth0 ? depth0.colSelectDispOverride : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "colSelectDispOverride",
            hash: {},
            data: data
        }) : helper)) + '" \n    data-header-id="' + alias4((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + "--" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" \n    data-field-master-id="' + alias4((helper = null != (helper = helpers.fldMstrId || (null != depth0 ? depth0.fldMstrId : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fldMstrId",
            hash: {},
            data: data
        }) : helper)) + '"\n    data-page-dtl-id="' + alias4((helper = null != (helper = helpers.detailId || (null != depth0 ? depth0.detailId : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "detailId",
            hash: {},
            data: data
        }) : helper)) + '"    \n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '    class="' + alias4((helper = null != (helper = helpers.wrapClass || (null != depth0 ? depth0.wrapClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "wrapClass",
            hash: {},
            data: data
        }) : helper)) + '">\n    ' + (null != (helper = null != (helper = helpers.inputField || (null != depth0 ? depth0.inputField : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "inputField",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n</td>";
    },
    useData: !0
}), this.ADF.templates.grids.headerCell = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return " is-sortable";
    },
    "3": function(container, depth0, helpers, partials, data) {
        return '        <span class="sort-control sort-indicator"></span>\n';
    },
    "5": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '        <span class="adf-header-control tooltip-trigger">\n            <span class="icon icon-tooltip">\n                <svg viewBox="0 0 32 32" class="icon tooltip-trigger">\n                        <use xlink:href="#icon-question-circle"></use>\n                </svg>\n                <span class="tooltip">\n                    ' + (null != (helper = null != (helper = helpers.tooltipText || (null != depth0 ? depth0.tooltipText : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "tooltipText",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n                </span>\n            </span>\n        </span>\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<th\n        data-column-select-priority="' + alias4((helper = null != (helper = helpers.fieldPriority || (null != depth0 ? depth0.fieldPriority : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldPriority",
            hash: {},
            data: data
        }) : helper)) + '"\n        data-column-name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '"\n        data-column-index="' + alias4((helper = null != (helper = helpers.colIndex || (null != depth0 ? depth0.colIndex : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "colIndex",
            hash: {},
            data: data
        }) : helper)) + '"\n        id="' + alias4((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + "--" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '"\n        class="\n                ' + alias4((helper = null != (helper = helpers.wrapClass || (null != depth0 ? depth0.wrapClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "wrapClass",
            hash: {},
            data: data
        }) : helper)) + "\n                adf-field-type-" + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + "\n                " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.sortable : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '\n        ">\n\n' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.sortable : depth0, {
            name: "if",
            hash: {},
            fn: container.program(3, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '\n    <span class="sort-control">' + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</span>\n\n" + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.tooltipText : depth0, {
            name: "if",
            hash: {},
            fn: container.program(5, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '\n    <span type="button" class="adf-header-control resize-control"></span>\n</th>';
    },
    useData: !0
}), this.ADF.templates.grids.recordAddWidget = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper;
        return container.escapeExpression((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + "Action--";
    },
    "3": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "            data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<span class="btn btn-addRecords">\n    <a\n        href="' + alias4((helper = null != (helper = helpers.url || (null != depth0 ? depth0.url : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "url",
            hash: {},
            data: data
        }) : helper)) + '"\n        class="' + alias4((helper = null != (helper = helpers.itemClass || (null != depth0 ? depth0.itemClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "itemClass",
            hash: {},
            data: data
        }) : helper)) + '"\n        id="' + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.regionName : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + alias4((helper = null != (helper = helpers.id || (null != depth0 ? depth0.id : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "id",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(3, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    >\n        " + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + ' \n        (<span class="record-add-control-display">' + alias4((helper = null != (helper = helpers.recCount || (null != depth0 ? depth0.recCount : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "recCount",
            hash: {},
            data: data
        }) : helper)) + '</span>)\n    </a>\n    <svg viewBox="0 0 16 16" class="icon record-add-control">\n        <use xlink:href="#icon-chevron-down"></use>\n    </svg>\n</span>\n<div class="record-add-control-input">\n    <input type="range" class="record-add-input" min="1" max="20" step="1" value="' + alias4((helper = null != (helper = helpers.recCount || (null != depth0 ? depth0.recCount : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "recCount",
            hash: {},
            data: data
        }) : helper)) + '">\n</div>\n';
    },
    useData: !0
}), this.ADF.templates.grids.region = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return '    <button type="button" class="btn btn-close overlay-close">\n        <svg viewBox="0 0 32 32" class="icon">\n            <use xlink:href="#icon-close"></use>\n        </svg>\n        <span>\n            Close\n        </span>\n    </button>\n';
    },
    "3": function(container, depth0, helpers, partials, data) {
        var helper;
        return "    <legend>" + container.escapeExpression((helper = null != (helper = helpers.regionLabel || (null != depth0 ? depth0.regionLabel : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "regionLabel",
            hash: {},
            data: data
        }) : helper)) + "</legend>\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, alias1 = null != depth0 ? depth0 : {};
        return (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.inOverlay : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.regionLabel : depth0, {
            name: "if",
            hash: {},
            fn: container.program(3, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '<div class="adf-grid-wrapper"></div>\n<form action="" method="POST" enctype="multipart/form-data" class="adf-grid-upload-form">\n    <input type="file" id="adf-grid-upload-input">\n    <div class="adf-grid-upload-text" data-drag-target-text="drag here" data-drag-on-text="drop me!"></div>\n</form>\n<div class="upload-drop-zone"></div>';
    },
    useData: !0
}), this.ADF.templates.grids.row = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper;
        return "status-code-" + container.escapeExpression((helper = null != (helper = helpers.status_code || (null != depth0 ? depth0.status_code : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "status_code",
            hash: {},
            data: data
        }) : helper));
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<tr id="' + alias4((helper = null != (helper = helpers.regionName || (null != depth0 ? depth0.regionName : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "regionName",
            hash: {},
            data: data
        }) : helper)) + "--" + alias4((helper = null != (helper = helpers.id || (null != depth0 ? depth0.id : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "id",
            hash: {},
            data: data
        }) : helper)) + '" class="adf-record ' + alias4((helper = null != (helper = helpers.recordClass || (null != depth0 ? depth0.recordClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "recordClass",
            hash: {},
            data: data
        }) : helper)) + " " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.status_code : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '">\n    ' + (null != (helper = null != (helper = helpers.cells || (null != depth0 ? depth0.cells : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "cells",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n</tr>";
    },
    useData: !0
}), this.ADF.templates.grids.table = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        return '<table class="adf-grid">\n    <thead>\n        <tr>\n        </tr>\n    </thead>\n    <tbody>\n    </tbody>\n</table>\n<div class="record-counter"></div>\n<div class="adf-grid-actions-wrapper">\n    <div class="adf-grid-column-select">\n    </div>\n    <div class="adf-grid-actions">\n    </div>\n</div>';
    },
    useData: !0
}), this.ADF.templates.grids.widgetEditor = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return '        <button type="button" class="btn btn-close overlay-close">\n            <svg viewBox="0 0 32 32" class="icon">\n                <use xlink:href="#icon-close"></use>\n            </svg>\n            <span>\n                Close\n            </span>\n        </button>\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1;
        return '<div class="adf-widget-editor adf-region" id="widget-editor" data-adf-region-type="widget-editor" data-adf-ajax-onshow="true">\n' + (null != (stack1 = helpers["if"].call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.inOverlay : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '    <div class="adf-grid-wrapper"></div>\n    <form action="" method="POST" enctype="multipart/form-data" class="adf-grid-upload-form">\n        <input type="file" id="adf-grid-upload-input">\n        <div class="adf-grid-upload-text" data-drag-target-text="drag here" data-drag-on-text="drop me!"></div>\n    </form>\n    <div class="upload-drop-zone"></div>\n</div>';
    },
    useData: !0
}), this.ADF.templates.inputHelpers.checkboxListingGroupFooter = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        return "</div><!-- /.adf-checkbox-group-wrapper -->";
    },
    useData: !0
}), this.ADF.templates.inputHelpers.checkboxListingGroupHeader = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return null != (helper = null != (helper = helpers.selectAllStr || (null != depth0 ? depth0.selectAllStr : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "selectAllStr",
            hash: {},
            data: data
        }) : helper) ? stack1 : "";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {};
        return '<div class="adf-checkbox-group-wrapper">\n    <div class="adf-checkbox-group-wrapper-header">' + container.escapeExpression((helper = null != (helper = helpers.groupLabel || (null != depth0 ? depth0.groupLabel : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(alias1, {
            name: "groupLabel",
            hash: {},
            data: data
        }) : helper)) + " " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.selectAllStr : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "</div>";
    },
    useData: !0
}), this.ADF.templates.inputHelpers.checkboxListingItem = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data, blockParams, depths) {
        var alias1 = container.lambda, alias2 = container.escapeExpression;
        return '<div class="adf-checkbox-wrapper">\n    <input type="checkbox" id="adf-checkbox-' + alias2(alias1(null != depths[1] ? depths[1].name : depths[1], depth0)) + "-" + alias2(alias1(null != depth0 ? depth0.value : depth0, depth0)) + '" name="' + alias2(alias1(null != depths[1] ? depths[1].name : depths[1], depth0)) + '" value="' + alias2(alias1(null != depth0 ? depth0.value : depth0, depth0)) + '" ' + alias2((helpers.optionChecked || depth0 && depth0.optionChecked || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.selectedInd : depth0, null != depth0 ? depth0.value : depth0, null != depths[1] ? depths[1].currentValue : depths[1], {
            name: "optionChecked",
            hash: {},
            data: data
        })) + '>\n    <label for="adf-checkbox-' + alias2(alias1(null != depths[1] ? depths[1].name : depths[1], depth0)) + "-" + alias2(alias1(null != depth0 ? depth0.value : depth0, depth0)) + '">' + alias2(alias1(null != depth0 ? depth0.label : depth0, depth0)) + "</label>\n</div>";
    },
    useData: !0,
    useDepths: !0
}), this.ADF.templates.inputHelpers.selectFancyAddOption = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper;
        return '<li class="select-fancy-add-option">\n    <a href="#">Add Option?</a>\n    <form action="' + container.escapeExpression((helper = null != (helper = helpers.addOptionUrl || (null != depth0 ? depth0.addOptionUrl : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "addOptionUrl",
            hash: {},
            data: data
        }) : helper)) + '" method="post">\n        <table class="select-fany-add-option-details">\n            <tr>\n                <th>\n                    Value\n                </th>\n                <td>\n                    <input type="text" name="value" id="value">\n                </td>\n            </tr>\n            <tr>\n                <th>\n                    Label\n                </th>\n                <td>\n                    <input type="text" name="label" id="label">\n                </td>\n            </tr>\n            <tr>\n                <th>\n                    Group\n                </th>\n                <td>\n                    <input type="text" name="group" id="group">\n                </td>\n            </tr>\n            <tr>\n                <td colspan="3">\n                    <button type="submit" class="btn btn-submit">Save</button>\n                    <button type="button" class="btn btn-cancel">Cancel</button>\n                </td>\n            </tr>\n        </table>\n    </form>\n</li>';
    },
    useData: !0
}), this.ADF.templates.inputHelpers.selectFancyRecord = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<tr class="option" data-value="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '" data-label="' + alias4((helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper)) + '">\n    ' + alias4((helpers.selectFancyLink || depth0 && depth0.selectFancyLink || alias2).call(alias1, null != depth0 ? depth0.value : depth0, null != depth0 ? depth0.label : depth0, null != depth0 ? depth0.tooltip : depth0, null != depth0 ? depth0.fieldDelimiter : depth0, {
            name: "selectFancyLink",
            hash: {},
            data: data
        })) + "\n</tr>";
    },
    useData: !0
}), this.ADF.templates.inputHelpers.selectFancyTooltip = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var stack1, helper;
        return '    <i class="icon icon-tooltip select2-help-text">\n        <span class="tooltip">\n            ' + (null != (helper = null != (helper = helpers.tooltip || (null != depth0 ? depth0.tooltip : depth0)) ? helper : helpers.helperMissing, 
        stack1 = "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "tooltip",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n        </span>\n    </i>\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1;
        return null != (stack1 = helpers["if"].call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.tooltip : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "";
    },
    useData: !0
}), this.ADF.templates.inputTypes.actions = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '    <a\n    	href="' + alias4((helper = null != (helper = helpers.url || (null != depth0 ? depth0.url : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "url",
            hash: {},
            data: data
        }) : helper)) + '"\n    	class="btn btn-' + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + " " + alias4((helper = null != (helper = helpers.actionClass || (null != depth0 ? depth0.actionClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "actionClass",
            hash: {},
            data: data
        }) : helper)) + '"\n    	data-action-type="' + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + '"\n        data-page-dtl-id="' + alias4((helper = null != (helper = helpers.pageDetailId || (null != depth0 ? depth0.pageDetailId : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "pageDetailId",
            hash: {},
            data: data
        }) : helper)) + '"\n    	title="' + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(2, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '    >\n    <svg viewBox="0 0 32 32" class="icon">\n        <use xlink:href="#icon-' + alias4((helper = null != (helper = helpers.type || (null != depth0 ? depth0.type : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "type",
            hash: {},
            data: data
        }) : helper)) + '"></use>\n    </svg>\n    <span>\n        ' + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "\n    </span>\n    </a>\n";
    },
    "2": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "	        data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    "4": function(container, depth0, helpers, partials, data) {
        return '    <div class="adf-record-messages"></div>\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, alias1 = null != depth0 ? depth0 : {};
        return (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.actions : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.gridCell : depth0, {
            name: "if",
            hash: {},
            fn: container.program(4, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "");
    },
    useData: !0
}), this.ADF.templates.inputTypes.adfSerializedData = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1;
        return '<input type="hidden" name="adfSerializedData" value=\'' + (null != (stack1 = (helpers.json || depth0 && depth0.json || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.data : depth0, {
            name: "json",
            hash: {},
            data: data
        })) ? stack1 : "") + "'>";
    },
    useData: !0
}), this.ADF.templates.inputTypes.ajaxSuggest = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "                " + container.escapeExpression((helpers.dataAttributeWrite || depth0 && depth0.dataAttributeWrite || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.name : depth0, null != depth0 ? depth0.value : depth0, "input", {
            name: "dataAttributeWrite",
            hash: {},
            data: data
        })) + "\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div class="ajax-suggest-wrapper">\n\n    <input\n        type="text"\n        class="' + alias4((helper = null != (helper = helpers.fieldClass || (null != depth0 ? depth0.fieldClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldClass",
            hash: {},
            data: data
        }) : helper)) + ' ajax-suggest"\n        id="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '--display"\n        name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '--display"\n        value="' + alias4((helpers.selectFancyDisplayText || depth0 && depth0.selectFancyDisplayText || alias2).call(alias1, null != depth0 ? depth0.currentValue : depth0, null != depth0 ? depth0.data : depth0, {
            name: "selectFancyDisplayText",
            hash: {},
            data: data
        })) + '"\n        autocomplete="off"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '        >\n    <input type="hidden" class="adf-form-input" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" id="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">\n    <button class="ajax-suggest-control toggle" tabindex="-1">\n        <svg viewBox="0 0 32 32" class="icon icon-chevron-down">\n            <use xlink:href="#icon-chevron-down"></use>\n        </svg>\n        <svg viewBox="0 0 32 32" class="icon icon-chevron-up">\n            <use xlink:href="#icon-chevron-up"></use>\n        </svg>\n    </button>\n    <table class="options">\n        <thead></thead>\n        <tbody></tbody>\n    </table>\n</div><!-- /.ajax-suggest-wrapper -->';
    },
    useData: !0
}), this.ADF.templates.inputTypes.checkbox = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<input class="adf-form-input" type="checkbox" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" id="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="Y" ' + alias4((helpers.optionChecked || depth0 && depth0.optionChecked || alias2).call(alias1, null != depth0 ? depth0.selectedBln : depth0, "Y", null != depth0 ? depth0.currentValue : depth0, {
            name: "optionChecked",
            hash: {},
            data: data
        })) + ">";
    },
    useData: !0
}), this.ADF.templates.inputTypes.checkboxes = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "        " + container.escapeExpression((helpers.dataAttributeWrite || depth0 && depth0.dataAttributeWrite || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.name : depth0, null != depth0 ? depth0.value : depth0, "input", {
            name: "dataAttributeWrite",
            hash: {},
            data: data
        })) + "\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div\n    class="adf-checkboxes-wrapper adf-input-wrapper adf-form-input ' + alias4((helper = null != (helper = helpers.fieldClass || (null != depth0 ? depth0.fieldClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldClass",
            hash: {},
            data: data
        }) : helper)) + '"\n    id="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    >\n    " + alias4((helpers.checkboxesSelectAll || depth0 && depth0.checkboxesSelectAll || alias2).call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "checkboxesSelectAll",
            hash: {},
            data: data
        })) + "\n    " + (null != (stack1 = (helpers.checkboxesListing || depth0 && depth0.checkboxesListing || alias2).call(alias1, null != depth0 ? depth0.data : depth0, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "checkboxesListing",
            hash: {},
            data: data
        })) ? stack1 : "") + "\n</div>";
    },
    useData: !0
}), this.ADF.templates.inputTypes.date = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<input \n    type="text" \n    name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" \n    class="adf-datepicker adf-form-input"     \n    value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">';
    },
    useData: !0
}), this.ADF.templates.inputTypes.datetime = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<input \n    type="text" \n    name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" \n    class="adf-datetimepicker adf-form-input"     \n    value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">';
    },
    useData: !0
}), this.ADF.templates.inputTypes.email = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<input class="adf-form-input" type="email" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">';
    },
    useData: !0
}), this.ADF.templates.inputTypes.gridOverlay = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "        data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, alias1 = null != depth0 ? depth0 : {};
        return '<div class="adf-grid-overlay-value"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    >\n	" + (null != (stack1 = (helpers.overlaySummary || depth0 && depth0.overlaySummary || helpers.helperMissing).call(alias1, null != depth0 ? depth0.currentValue : depth0, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "overlaySummary",
            hash: {},
            data: data
        })) ? stack1 : "") + "\n</div>";
    },
    useData: !0
}), this.ADF.templates.inputTypes.hidden = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<input class="adf-form-input" type="hidden" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">';
    },
    useData: !0
}), this.ADF.templates.inputTypes.number = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<input class="adf-form-input" type="number" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '" min="' + alias4((helpers.numberInputMinMaxBuilder || depth0 && depth0.numberInputMinMaxBuilder || alias2).call(alias1, null != depth0 ? depth0.minLength : depth0, 0, {
            name: "numberInputMinMaxBuilder",
            hash: {},
            data: data
        })) + '" max="' + alias4((helpers.numberInputMinMaxBuilder || depth0 && depth0.numberInputMinMaxBuilder || alias2).call(alias1, null != depth0 ? depth0.maxLength : depth0, 9, {
            name: "numberInputMinMaxBuilder",
            hash: {},
            data: data
        })) + '" />';
    },
    useData: !0
}), this.ADF.templates.inputTypes.radio = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "        " + container.escapeExpression((helpers.dataAttributeWrite || depth0 && depth0.dataAttributeWrite || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.name : depth0, null != depth0 ? depth0.value : depth0, "input", {
            name: "dataAttributeWrite",
            hash: {},
            data: data
        })) + "\n";
    },
    "3": function(container, depth0, helpers, partials, data, blockParams, depths) {
        var alias1 = container.lambda, alias2 = container.escapeExpression;
        return '        <div class="adf-radio-wrapper">\n        	<input type="radio" id="adf-radio-' + alias2(alias1(null != depths[1] ? depths[1].name : depths[1], depth0)) + "-" + alias2(alias1(null != depth0 ? depth0.value : depth0, depth0)) + '" name="' + alias2(alias1(null != depths[1] ? depths[1].name : depths[1], depth0)) + '" value="' + alias2(alias1(null != depth0 ? depth0.value : depth0, depth0)) + '" ' + alias2((helpers.optionChecked || depth0 && depth0.optionChecked || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.checked : depth0, null != depth0 ? depth0.value : depth0, null != depths[1] ? depths[1].currentValue : depths[1], {
            name: "optionChecked",
            hash: {},
            data: data
        })) + '>\n            <label for="adf-radio-' + alias2(alias1(null != depths[1] ? depths[1].name : depths[1], depth0)) + "-" + alias2(alias1(null != depth0 ? depth0.value : depth0, depth0)) + '">' + alias2(alias1(null != depth0 ? depth0.label : depth0, depth0)) + "</label>\n        </div>\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data, blockParams, depths) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div\n    id="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0, blockParams, depths),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '    class="adf-radios-wrapper adf-input-wrapper adf-form-input ' + alias4((helper = null != (helper = helpers.fieldClass || (null != depth0 ? depth0.fieldClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldClass",
            hash: {},
            data: data
        }) : helper)) + '"\n    >\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.data : depth0, {
            name: "each",
            hash: {},
            fn: container.program(3, data, 0, blockParams, depths),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "</div>";
    },
    useData: !0,
    useDepths: !0
}), this.ADF.templates.inputTypes.readonly = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "        data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "  <span\n" + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    >\n    <span>" + (null != (helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + '</span>\n    <input class="adf-form-input" type="hidden" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">\n  </span>\n';
    },
    useData: !0
}), this.ADF.templates.inputTypes.selectFancy = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "                " + container.escapeExpression((helpers.dataAttributeWrite || depth0 && depth0.dataAttributeWrite || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.name : depth0, null != depth0 ? depth0.value : depth0, "input", {
            name: "dataAttributeWrite",
            hash: {},
            data: data
        })) + "\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div class="select-fancy-wrapper">\n\n    <input\n        type="text"\n        class="' + alias4((helper = null != (helper = helpers.fieldClass || (null != depth0 ? depth0.fieldClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldClass",
            hash: {},
            data: data
        }) : helper)) + ' select-fancy"\n        id="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '--display"\n        name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '--display"\n        value="' + alias4((helpers.selectFancyDisplayText || depth0 && depth0.selectFancyDisplayText || alias2).call(alias1, null != depth0 ? depth0.currentValue : depth0, null != depth0 ? depth0.data : depth0, {
            name: "selectFancyDisplayText",
            hash: {},
            data: data
        })) + '"\n        autocomplete="off"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '        >\n    <input type="hidden" class="adf-form-input" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" id="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">\n    <button class="select-fancy-control clear" tabindex="-1">\n        <svg viewBox="0 0 32 32" class="icon">\n            <use xlink:href="#icon-close"></use>\n        </svg>\n    </button>\n    <button class="select-fancy-control toggle" tabindex="-1">\n        <svg viewBox="0 0 32 32" class="icon icon-chevron-down">\n            <use xlink:href="#icon-chevron-down"></use>\n        </svg>\n        <svg viewBox="0 0 32 32" class="icon icon-chevron-up">\n            <use xlink:href="#icon-chevron-up"></use>\n        </svg>\n    </button>\n    <table class="options">\n        <thead></thead>\n        <tbody></tbody>\n    </table>\n</div><!-- /.select-fancy-wrapper -->';
    },
    useData: !0
}), this.ADF.templates.inputTypes.select = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        return "            " + container.escapeExpression((helpers.dataAttributeWrite || depth0 && depth0.dataAttributeWrite || helpers.helperMissing).call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.name : depth0, null != depth0 ? depth0.value : depth0, "input", {
            name: "dataAttributeWrite",
            hash: {},
            data: data
        })) + "\n";
    },
    "3": function(container, depth0, helpers, partials, data) {
        return "      <option></option>\n";
    },
    "5": function(container, depth0, helpers, partials, data, blockParams, depths) {
        var stack1, alias1 = container.escapeExpression, alias2 = null != depth0 ? depth0 : {};
        return '		<option value="' + alias1(container.lambda(null != depth0 ? depth0.value : depth0, depth0)) + '" ' + (null != (stack1 = helpers["if"].call(alias2, null != depth0 ? depth0.tooltip : depth0, {
            name: "if",
            hash: {},
            fn: container.program(6, data, 0, blockParams, depths),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + " " + alias1((helpers.optionSelected || depth0 && depth0.optionSelected || helpers.helperMissing).call(alias2, null != depth0 ? depth0.selectedBln : depth0, null != depth0 ? depth0.value : depth0, null != depths[1] ? depths[1].currentValue : depths[1], {
            name: "optionSelected",
            hash: {},
            data: data
        })) + ">" + (null != (stack1 = helpers["if"].call(alias2, null != depth0 ? depth0.label : depth0, {
            name: "if",
            hash: {},
            fn: container.program(8, data, 0, blockParams, depths),
            inverse: container.program(10, data, 0, blockParams, depths),
            data: data
        })) ? stack1 : "") + "</option>\n";
    },
    "6": function(container, depth0, helpers, partials, data) {
        var helper;
        return ' data-tooltip="' + container.escapeExpression((helper = null != (helper = helpers.tooltip || (null != depth0 ? depth0.tooltip : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "tooltip",
            hash: {},
            data: data
        }) : helper)) + '" ';
    },
    "8": function(container, depth0, helpers, partials, data) {
        return container.escapeExpression(container.lambda(null != depth0 ? depth0.label : depth0, depth0));
    },
    "10": function(container, depth0, helpers, partials, data) {
        return container.escapeExpression(container.lambda(null != depth0 ? depth0.value : depth0, depth0));
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data, blockParams, depths) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<select\n    class="' + alias4((helper = null != (helper = helpers.fieldClass || (null != depth0 ? depth0.fieldClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "fieldClass",
            hash: {},
            data: data
        }) : helper)) + ' adf-form-input"\n    name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" ' + alias4((helpers.dataAttributeBoolean || depth0 && depth0.dataAttributeBoolean || alias2).call(alias1, null != depth0 ? depth0.dataAttributes : depth0, "multiple", "multiple", {
            name: "dataAttributeBoolean",
            hash: {},
            data: data
        })) + "\n" + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0, blockParams, depths),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    >\n" + (null != (stack1 = helpers.unless.call(alias1, null != depth0 ? depth0.required : depth0, {
            name: "unless",
            hash: {},
            fn: container.program(3, data, 0, blockParams, depths),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.data : depth0, {
            name: "each",
            hash: {},
            fn: container.program(5, data, 0, blockParams, depths),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "</select>";
    },
    useData: !0,
    useDepths: !0
}), this.ADF.templates.inputTypes.text = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<input type="text" name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" class="adf-form-input form-input-field" value="' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '">';
    },
    useData: !0
}), this.ADF.templates.inputTypes.textarea = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div class="textarea-wrap">\n    <textarea name="' + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '" class="adf-form-input">' + alias4((helper = null != (helper = helpers.currentValue || (null != depth0 ? depth0.currentValue : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "currentValue",
            hash: {},
            data: data
        }) : helper)) + '</textarea>\n    <a href="#" class="size-toggle">\n        <svg viewBox="0 0 32 32" class="icon icon-expand">\n            <use xlink:href="#icon-expand"></use>\n        </svg>\n        <svg viewBox="0 0 32 32" class="icon icon-contract">\n            <use xlink:href="#icon-contract"></use>\n        </svg>\n    </a>\n</div>';
    },
    useData: !0
}), this.ADF.templates.inputTypes.widget = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return "        data-" + alias4((helper = null != (helper = helpers.name || (null != depth0 ? depth0.name : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "name",
            hash: {},
            data: data
        }) : helper)) + '="' + alias4((helper = null != (helper = helpers.value || (null != depth0 ? depth0.value : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "value",
            hash: {},
            data: data
        }) : helper)) + '"\n';
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, alias1 = null != depth0 ? depth0 : {};
        return '<div class="adf-widget-value"\n' + (null != (stack1 = helpers.each.call(alias1, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "    >\n    " + (null != (stack1 = (helpers.overlaySummary || depth0 && depth0.overlaySummary || helpers.helperMissing).call(alias1, null != depth0 ? depth0.currentValue : depth0, null != depth0 ? depth0.dataAttributes : depth0, {
            name: "overlaySummary",
            hash: {},
            data: data
        })) ? stack1 : "") + "\n</div>";
    },
    useData: !0
}), this.ADF.templates.messages.message = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function";
        return '<div class="message message-' + container.escapeExpression((helper = null != (helper = helpers.level || (null != depth0 ? depth0.level : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "level",
            hash: {},
            data: data
        }) : helper)) + ' init-size">\n    <header class="label">\n        ' + (null != (helper = null != (helper = helpers.label || (null != depth0 ? depth0.label : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "label",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + '\n        <nav class="message-actions">\n            <a href="#" class="message-details">\n                <svg viewBox="0 0 32 32" class="icon">\n                    <use xlink:href="#icon-bug"></use>\n                </svg>\n            </a>\n            <a href="#" class="message-remove">\n                <svg viewBox="0 0 32 32" class="icon">\n                    <use xlink:href="#icon-close"></use>\n                </svg>\n            </a>\n        </nav>\n    </header>\n    <div class="content">' + (null != (helper = null != (helper = helpers.content || (null != depth0 ? depth0.content : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "content",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</div>\n</div>";
    },
    useData: !0
}), this.ADF.templates.messages.window = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        return '<div class="adf-messages-window adf-region" id="messages-window" data-adf-region-type="messages-window">\n    <div class="messages-wrapper"></div>\n</div>';
    },
    useData: !0
}), this.ADF.templates.modules.module = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper;
        return "status-code-" + container.escapeExpression((helper = null != (helper = helpers.status_code || (null != depth0 ? depth0.status_code : depth0)) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "status_code",
            hash: {},
            data: data
        }) : helper));
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1, helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div class="module ' + alias4((helper = null != (helper = helpers.recordClass || (null != depth0 ? depth0.recordClass : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "recordClass",
            hash: {},
            data: data
        }) : helper)) + " layout-grid-4 " + (null != (stack1 = helpers["if"].call(alias1, null != depth0 ? depth0.status_code : depth0, {
            name: "if",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + '" id="' + alias4((helper = null != (helper = helpers.id || (null != depth0 ? depth0.id : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "id",
            hash: {},
            data: data
        }) : helper)) + '">\n    <header class="dnd-label">\n        <span class="dnd-handle">\n            <svg viewBox="0 0 32 32" class="icon">\n                <use xlink:href="#icon-menu"></use>\n            </svg>\n        </span>\n        <p>' + alias4((helper = null != (helper = helpers.module_label || (null != depth0 ? depth0.module_label : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "module_label",
            hash: {},
            data: data
        }) : helper)) + '</p>\n        <button type="button" class="module-details-toggle">\n            <span class="icon-expand">\n                <svg viewBox="0 0 32 32" class="icon">\n                    <use xlink:href="#icon-expand"></use>\n                </svg>\n            </span>\n            <span class="icon-contract hide">\n                <svg viewBox="0 0 32 32" class="icon">\n                    <use xlink:href="#icon-contract"></use>\n                </svg>\n            </span>\n        </button>\n    </header>\n    <div class="adf-record-messages"></div>\n    <ul class="module-details hide">' + (null != (helper = null != (helper = helpers.fields || (null != depth0 ? depth0.fields : depth0)) ? helper : alias2, 
        stack1 = typeof helper === alias3 ? helper.call(alias1, {
            name: "fields",
            hash: {},
            data: data
        }) : helper) ? stack1 : "") + "</ul>\n</div>";
    },
    useData: !0
}), this.ADF.templates.modules.wrapper = Handlebars.template({
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var helper, alias1 = null != depth0 ? depth0 : {}, alias2 = helpers.helperMissing, alias3 = "function", alias4 = container.escapeExpression;
        return '<div class="modules-wrapper">\n    <div class="adf-column-select">\n    </div>\n    <div class="module-list-wrapper dnd-wrapper" data-adf-dnd-target="' + alias4((helper = null != (helper = helpers.dndTarget || (null != depth0 ? depth0.dndTarget : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "dndTarget",
            hash: {},
            data: data
        }) : helper)) + '" data-adf-dnd-source="' + alias4((helper = null != (helper = helpers.dndSource || (null != depth0 ? depth0.dndSource : depth0)) ? helper : alias2, 
        typeof helper === alias3 ? helper.call(alias1, {
            name: "dndSource",
            hash: {},
            data: data
        }) : helper)) + '">\n    </div>\n    <div class="module-actions-wrapper"></div>\n</div>';
    },
    useData: !0
}), this.ADF.templates.utils.debugData = Handlebars.template({
    "1": function(container, depth0, helpers, partials, data) {
        var helper, alias1 = container.escapeExpression;
        return "        <li><strong>" + alias1((helper = null != (helper = helpers.key || data && data.key) ? helper : helpers.helperMissing, 
        "function" == typeof helper ? helper.call(null != depth0 ? depth0 : {}, {
            name: "key",
            hash: {},
            data: data
        }) : helper)) + "</strong>" + alias1(container.lambda(depth0, depth0)) + "</li>\n";
    },
    compiler: [ 7, ">= 4.0.0" ],
    main: function(container, depth0, helpers, partials, data) {
        var stack1;
        return '<ul class="tsga-debug-data">\n' + (null != (stack1 = helpers.each.call(null != depth0 ? depth0 : {}, null != depth0 ? depth0.data : depth0, {
            name: "each",
            hash: {},
            fn: container.program(1, data, 0),
            inverse: container.noop,
            data: data
        })) ? stack1 : "") + "</ul>";
    },
    useData: !0
});
//# sourceMappingURL=hbsTemplates.min.js.map